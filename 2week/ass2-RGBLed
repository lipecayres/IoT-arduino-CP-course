//
// Assignment 2
// 200548559 - Felipe Simoes Cayres
//
//


// Variables
int RGBRedPin = 9; //The red RGB LED is connected pin 9 of the Arduino.
int RGBGreenPin = 10; //The green RGB LED is connected pin 10 of the Arduino.
int RGBBluePin = 11; //The blue RGB LED is connected pin 11 of the Arduino.
int waitTime = 2000; //Sets the amount of time to wait between color changes.

void setup() 
{ //The Setup function runs once.
pinMode(RGBRedPin, OUTPUT); //Setup red RGB LED pin as an output pin.
pinMode(RGBGreenPin, OUTPUT); //Setup green RGB LED pin as an output pin.
pinMode(RGBBluePin, OUTPUT); //Setup blue RGB LED pin as an output pin.
 
  Serial.begin(9600);
  
}

		//
		// Level 1 - Copy and paste the source code 
		//

/*

void loop() { //The loop function runs forever.

  //Display Red
digitalWrite(RGBRedPin, HIGH); //Turn on RED
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBRedPin, LOW); //Turn off Red

  //Display Green
digitalWrite(RGBGreenPin, HIGH); //Turn on RED
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBGreenPin, LOW); //Turn off Red

  //Display Blue
digitalWrite(RGBBluePin, HIGH); //Turn on RED
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBBluePin, LOW); //Turn off Red

  //Display Magenta (Red + Blue)
digitalWrite(RGBRedPin, HIGH); //Turn on RED
digitalWrite(RGBBluePin, HIGH); //Turn on RED
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBRedPin, LOW); //Turn off Red
digitalWrite(RGBBluePin, LOW); //Turn on RED

  //Display Yellow (Red + Green)
digitalWrite(RGBRedPin, HIGH); //Turn on RED
digitalWrite(RGBGreenPin, HIGH); //Turn on RED
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBRedPin, LOW); //Turn off Red
digitalWrite(RGBGreenPin, LOW); //Turn of RED

  //Display Cyan (Blue + Green)
digitalWrite(RGBBluePin, HIGH); //Turn on BLUE
digitalWrite(RGBGreenPin, HIGH); //Turn on GREEN
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBBluePin, LOW); //Turn of BLUE
digitalWrite(RGBGreenPin, LOW); //Turn off GREEN

  //Display White (Red + Blue + Green)
digitalWrite(RGBRedPin, HIGH); //Turn on RED
digitalWrite(RGBBluePin, HIGH); //Turn on BLUE
digitalWrite(RGBGreenPin, HIGH); //Turn on GREEN
delay(waitTime); //Wait for 2 seconds
digitalWrite(RGBRedPin, LOW); //Turn off RED
digitalWrite(RGBBluePin, LOW); //Turn off BLUE
digitalWrite(RGBGreenPin, LOW); //Turn off GREEN
}
*/

		//
		// Level 2 - Create your own personalized 15 second light show
		//

/*

void loop() { 

  redColor(1000);
  blueColor(1000);
  redColor(1000);
  blueColor(1000);
  redColor(1000);
  blueColor(1000);
  whiteColor(2000);
  greenColor(1000);  
  magentaColor(1000);
  greenColor(1000);  
  magentaColor(1000);
  yellowColor(1000);
  cyanColor(1000);
  blueColor(1000);

}

*/


	//
	// Level 3 - Slow the Lights Down Challenge	
	//


/*

void loop(){
	
  for (int i=1000; i<=10000;i = i+1000){
    float speedBlink = i/7;

    redColor(speedBlink);
    greenColor(speedBlink);  
    blueColor(speedBlink);
    magentaColor(speedBlink);
    yellowColor(speedBlink);
    cyanColor(speedBlink);
    whiteColor(speedBlink);
    
    Serial.print(i/1000);
    Serial.println("sec");
  }

}

*/

	//
	// Level 4 - Random number personalized 15 second light show
	//


void loop () {

  int getRandomTime = random(500,1000);
  int cronometre = 0;	
  int timeLimit = 15000;
  float speedBlink = getRandomTime / 14;

  Serial.print(getRandomTime);
  Serial.println("sec");
  
  do
  {
    cronometre = cronometre + getRandomTime;
    
    redColor(speedBlink);
    blueColor(speedBlink);
    redColor(speedBlink);
    blueColor(speedBlink);
    redColor(speedBlink);
    blueColor(speedBlink);
    whiteColor(speedBlink);
    greenColor(speedBlink);  
    magentaColor(speedBlink);
    greenColor(speedBlink);  
    magentaColor(speedBlink);
    yellowColor(speedBlink);
    cyanColor(speedBlink);
    blueColor(speedBlink);
  	
  }
  while(cronometre <= timeLimit);

  for (int i=1000; i <=5000; i = i+1000){
	  whiteColor(1000);
  }

}


  //Display Red color
void redColor (float TIME)
{
  digitalWrite(RGBRedPin, HIGH); //Turn on RED
  delay(TIME); //Set time delay 
  digitalWrite(RGBRedPin, LOW); //Turn off Red
}

  //Display Green
void greenColor(float TIME) {
  digitalWrite(RGBGreenPin, HIGH); //Turn on RED
  delay(TIME); //Set time delay 
  digitalWrite(RGBGreenPin, LOW); //Turn off Red
}

  //Display Blue
void blueColor (float TIME){
  digitalWrite(RGBBluePin, HIGH); //Turn on RED
  delay(TIME); //Set time delay
  digitalWrite(RGBBluePin, LOW); //Turn off Red
}

  //Display Magenta (Red + Blue)
void magentaColor (float TIME){
  digitalWrite(RGBRedPin, HIGH); //Turn on RED
  digitalWrite(RGBBluePin, HIGH); //Turn on RED
  delay(TIME); //Set time delay 
  digitalWrite(RGBRedPin, LOW); //Turn off Red
  digitalWrite(RGBBluePin, LOW); //Turn on RED
}

  //Display Yellow (Red + Green)
void yellowColor (float TIME){
  digitalWrite(RGBRedPin, HIGH); //Turn on RED
  digitalWrite(RGBGreenPin, HIGH); //Turn on RED
  delay(TIME); //Set time delay 
  digitalWrite(RGBRedPin, LOW); //Turn off Red
  digitalWrite(RGBGreenPin, LOW); //Turn of RED
}

  //Display Cyan (Blue + Green)
void cyanColor (float TIME){
  digitalWrite(RGBBluePin, HIGH); //Turn on BLUE
  digitalWrite(RGBGreenPin, HIGH); //Turn on GREEN
  delay(TIME); //Set time delay 
  digitalWrite(RGBBluePin, LOW); //Turn of BLUE
  digitalWrite(RGBGreenPin, LOW); //Turn off GREEN
}

 
  //Display White (Red + Blue + Green)
void whiteColor (float TIME){
  digitalWrite(RGBRedPin, HIGH); //Turn on RED
  digitalWrite(RGBBluePin, HIGH); //Turn on BLUE
  digitalWrite(RGBGreenPin, HIGH); //Turn on GREEN
  delay(TIME); //Set time delay 
  digitalWrite(RGBRedPin, LOW); //Turn off RED
  digitalWrite(RGBBluePin, LOW); //Turn off BLUE
  digitalWrite(RGBGreenPin, LOW); //Turn off GREEN
}



